?mean_distance
?transitivity
?centr_degree(subs, normalized=T)
?betweenness
datatable = matrix(c(mean(V(subs)$degree),
sd(V(subs)$degree),
min(V(subs)$degree),
max(V(subs)$degree),
'-',
mean(E(subs)$weight),
sd(E(subs)$weight),
min(E(subs)$weight),
max(E(subs)$weight),
'-',
mean(degree(subs)),
sd(degree(subs)),
min(degree(subs)),
max(degree(subs)),
centr_degree(subs, normalized=T)$centralization,
mean(closeness(subs)),
sd(closeness(subs)),
min(closeness(subs)),
max(closeness(subs)),
centr_clo(subs, mode="all", normalized=T)$centralization,
mean(betweenness(subs, directed = F)),
sd(betweenness(subs, directed = F)),
min(betweenness(subs, directed = F)),
max(betweenness(subs, directed = F, normalised = T)),
centr_betw(subs, directed = F, normalized=T)$centralization
),ncol=5)
colnames(datatable) <- c("# ties", "edge weights", "degree","closeness", "betweenness")
rownames(datatable) <- c("Mean","SD","Min", "Max", "Centrality")
datatable = matrix(c(mean(V(subs)$degree),
sd(V(subs)$degree),
min(V(subs)$degree),
max(V(subs)$degree),
'-',
mean(E(subs)$weight),
sd(E(subs)$weight),
min(E(subs)$weight),
max(E(subs)$weight),
'-',
mean(degree(subs)),
sd(degree(subs)),
min(degree(subs)),
max(degree(subs)),
centr_degree(subs, normalized=T)$centralization,
mean(closeness(subs)),
sd(closeness(subs)),
min(closeness(subs)),
max(closeness(subs)),
centr_clo(subs, mode="all", normalized=T)$centralization,
mean(betweenness(subs, directed = F)),
sd(betweenness(subs, directed = F)),
min(betweenness(subs, directed = F)),
max(betweenness(subs, directed = F, normalized = T)),
centr_betw(subs, directed = F, normalized=T)$centralization
),ncol=5)
colnames(datatable) <- c("# ties", "edge weights", "degree","closeness", "betweenness")
rownames(datatable) <- c("Mean","SD","Min", "Max", "Centrality")
da
datatable
datatable = matrix(c(mean(V(subs)$degree),
sd(V(subs)$degree),
min(V(subs)$degree),
max(V(subs)$degree),
'-',
mean(E(subs)$weight),
sd(E(subs)$weight),
min(E(subs)$weight),
max(E(subs)$weight),
'-',
mean(degree(subs)),
sd(degree(subs)),
min(degree(subs)),
max(degree(subs)),
centr_degree(subs, normalized=T)$centralization,
mean(closeness(subs), normalized = T),
sd(closeness(subs), normalized = T),
min(closeness(subs), normalized = T),
max(closeness(subs), normalized = T),
centr_clo(subs, mode="all", normalized=T)$centralization,
mean(betweenness(subs, directed = F, normalized = T)),
sd(betweenness(subs, directed = F, normalized = T)),
min(betweenness(subs, directed = F, normalized = T)),
max(betweenness(subs, directed = F, normalized = T)),
centr_betw(subs, directed = F, normalized=T)$centralization
),ncol=5)
colnames(datatable) <- c("# ties", "edge weights", "degree","closeness", "betweenness")
rownames(datatable) <- c("Mean","SD","Min", "Max", "Centrality")
datatable <- t(as.table(datatable))
datatable
get.adjacency(subs)
type(get.adjacency(subs))
class(get.adjacency(subs))
mat = (get.adjacency(subs))
write.csv(mat, 'cmv_adj_mat.csv')
install.packages("blockmodel")
packageurl <- "http://cran.r-project.org/src/contrib/Archive/blockmodel/blockmodel_0.1.8.tar.gz"
install.packages(packageurl, contriburl=NULL, type="source")
packageurl <- "https://cran.r-project.org/bin/macosx/el-capitan/contrib/3.4/blockmodels_1.1.1.tgz"
install.packages(packageurl, contriburl=NULL, type="source")
library(igraph)
library(RColorBrewer)
library(extrafont)
loadfonts()
subreddit = 'td'
subname = 'The_Donald'
date = Sys.Date()
date
date = 2017-06-01
edges = read.csv(
sprintf('/Users/emg/Programming/GitHub/mod-timelines/moding-data/%s/%s/lists/edgelist.csv',
subreddit,
date))
nodes = read.csv(
sprintf('/Users/emg/Programming/GitHub/mod-timelines/moding-data/%s/%s/lists/nodelist.csv',
subreddit,
date))
net = graph_from_data_frame(d=edges, vertices=nodes)
net = simplify(net, remove.loops = T)
V(net)$type = nodes$type # allows bipartite bipartite
V(net)$color = nodes$mod_type
net = delete_vertices(net, V(net)[V(net)$name==subname])
V(net)$degree = degree(net)
pr=bipartite.projection(net)
mods = pr$proj2
subs=pr$proj1
tdsubs = subs
V(tdsubs)$subdegree = degree(tdsubs)
### components
clu = components(tdsubs)
g = groups(clu)
giant = induced.subgraph(tdsubs, which(clu$membership==2))
plot(tdsubs, vertex.label=NA, vertex.size=2, layout=layout_with_fr)
plot(net)
subreddit = 'td'
subname = 'The_Donald'
#date = Sys.Date()
date = 2017-06-01
#
# subreddit = 'cmv'
# subname = 'changemyview'
# date = Sys.Date()
## create NETWORK
edges = read.csv(
sprintf('/Users/emg/Programming/GitHub/mod-timelines/moding-data/%s/%s/lists/edgelist.csv',
subreddit,
date))
nodes = read.csv(
sprintf('/Users/emg/Programming/GitHub/mod-timelines/moding-data/%s/%s/lists/nodelist.csv',
subreddit,
date))
net = graph_from_data_frame(d=edges, vertices=nodes)
net = simplify(net, remove.loops = T)
#### TWO-MODE NETWORK
V(net)$type = nodes$type # allows bipartite bipartite
shapes = c('square','circle')
V(net)$shape = shapes[V(net)$type + 1]
cols = c('black','royalblue','midnightblue','indianred','darkred')
V(net)$color = cols[nodes$mod_type + 1]
net = delete_vertices(net, V(net)[V(net)$name==subname])
V(net)$degree = degree(net)
#net = delete_vertices(net, V(net)[V(net)$degree==1])
layout = layout_with_fr(net)
plot(net, vertex.frame.color=V(net)$color, edge.arrow.size=0,
layout=layout,
vertex.size = log10(V(net)$degree)*7,
#vertex.label = NA,
vertex.label.color = V(net)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor('white', alpha.f = 0.5))
vertex.color = adjustcolor(V(net)$color, alpha.f = 0.5))
title(sprintf(
'r/%s Full Two Mode Mod-Sub Network', subname)
, cex.main=1)
plot(net, vertex.frame.color='V(net)$color'black, edge.arrow.size=0,
layout=layout,
vertex.size = log10(V(net)$degree)*7,
vertex.label = NA,
vertex.label.color = V(net)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor(V(net)$color, alpha.f = 0.5))
title(sprintf(
'r/%s Full Two Mode Mod-Sub Network', subname)
, cex.main=1)
plot(net, vertex.frame.color='black', edge.arrow.size=0,
layout=layout,
vertex.size = log10(V(net)$degree)*7,
vertex.label = NA,
vertex.label.color = V(net)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor(V(net)$color, alpha.f = 0.5))
title(sprintf(
'r/%s Full Two Mode Mod-Sub Network', subname)
, cex.main=1)
View(nodes)
View(nodes)
View(edges)
View(edges)
subreddit = 'td'
subname = 'The_Donald'
#date = Sys.Date()
date = 2017-06-01
## create NETWORK
edges = read.csv(
sprintf('/Users/emg/Programming/GitHub/mod-timelines/moding-data/%s/%s/lists/edgelist.csv',
subreddit,
date))
nodes = read.csv(
sprintf('/Users/emg/Programming/GitHub/mod-timelines/moding-data/%s/%s/lists/nodelist.csv',
subreddit,
date))
net = graph_from_data_frame(d=edges, vertices=nodes)
net = simplify(net, remove.loops = T)
#### TWO-MODE NETWORK
V(net)$type = nodes$type # allows bipartite bipartite
shapes = c('square','circle')
V(net)$shape = shapes[V(net)$type + 1]
cols = c('black','royalblue','midnightblue','indianred','darkred')
V(net)$color = cols[nodes$mod_type + 1]
net = delete_vertices(net, V(net)[V(net)$name==subname])
V(net)$degree = degree(net)
#net = delete_vertices(net, V(net)[V(net)$degree==1])
layout = layout_with_fr(net)
plot(net, vertex.frame.color='black', edge.arrow.size=0,
layout=layout,
vertex.size = log10(V(net)$degree)*7,
vertex.label = NA,
vertex.label.color = V(net)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor(V(net)$color, alpha.f = 0.5))
title(sprintf(
'r/%s Full Two Mode Mod-Sub Network', subname)
, cex.main=1)
subreddit = 'td'
subname = 'The_Donald'
#date = Sys.Date()
date = 2017-06-02
## create NETWORK
edges = read.csv(
sprintf('/Users/emg/Programming/GitHub/mod-timelines/moding-data/%s/%s/lists/edgelist.csv',
subreddit,
date))
nodes = read.csv(
sprintf('/Users/emg/Programming/GitHub/mod-timelines/moding-data/%s/%s/lists/nodelist.csv',
subreddit,
date))
net = graph_from_data_frame(d=edges, vertices=nodes)
net = simplify(net, remove.loops = T)
#### TWO-MODE NETWORK
V(net)$type = nodes$type # allows bipartite bipartite
shapes = c('square','circle')
V(net)$shape = shapes[V(net)$type + 1]
cols = c('black','royalblue','midnightblue','indianred','darkred')
V(net)$color = cols[nodes$mod_type + 1]
net = delete_vertices(net, V(net)[V(net)$name==subname])
V(net)$degree = degree(net)
#net = delete_vertices(net, V(net)[V(net)$degree==1])
layout = layout_with_fr(net)
plot(net, vertex.frame.color='black', edge.arrow.size=0,
layout=layout,
vertex.size = log10(V(net)$degree)*7,
vertex.label = NA,
vertex.label.color = V(net)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor(V(net)$color, alpha.f = 0.5))
title(sprintf(
'r/%s Full Two Mode Mod-Sub Network', subname)
, cex.main=1)
subreddit = 'td'
subname = 'The_Donald'
#date = Sys.Date()
date = 2017-06-05
## create NETWORK
edges = read.csv(
sprintf('/Users/emg/Programming/GitHub/mod-timelines/moding-data/%s/%s/lists/edgelist.csv',
subreddit,
date))
nodes = read.csv(
sprintf('/Users/emg/Programming/GitHub/mod-timelines/moding-data/%s/%s/lists/nodelist.csv',
subreddit,
date))
net = graph_from_data_frame(d=edges, vertices=nodes)
net = simplify(net, remove.loops = T)
#### TWO-MODE NETWORK
V(net)$type = nodes$type # allows bipartite bipartite
shapes = c('square','circle')
V(net)$shape = shapes[V(net)$type + 1]
cols = c('black','royalblue','midnightblue','indianred','darkred')
V(net)$color = cols[nodes$mod_type + 1]
net = delete_vertices(net, V(net)[V(net)$name==subname])
V(net)$degree = degree(net)
#net = delete_vertices(net, V(net)[V(net)$degree==1])
layout = layout_with_fr(net)
plot(net, vertex.frame.color='black', edge.arrow.size=0,
layout=layout,
vertex.size = log10(V(net)$degree)*7,
vertex.label = NA,
vertex.label.color = V(net)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor(V(net)$color, alpha.f = 0.5))
title(sprintf(
'r/%s Full Two Mode Mod-Sub Network', subname)
, cex.main=1)
View(edges)
View(edges)
edges = read.csv('/Users/emg/Programming/GitHub/mod-timelines/moding-data/td/2017-06-05/lists/edgelist.csv')
nodes = read.csv('/Users/emg/Programming/GitHub/mod-timelines/moding-data/td/2017-06-05/lists/edgelist.csv')
net = graph_from_data_frame(d=edges, vertices=nodes)
net = simplify(net, remove.loops = T)
plot(net)
V(net)$type = nodes$type # allows bipartite bipartite
shapes = c('square','circle')
V(net)$shape = shapes[V(net)$type + 1]
cols = c('black','royalblue','midnightblue','indianred','darkred')
V(net)$color = cols[nodes$mod_type + 1]
net = delete_vertices(net, V(net)[V(net)$name==subname])
V(net)$degree = degree(net)
#net = delete_vertices(net, V(net)[V(net)$degree==1])
layout = layout_with_fr(net)
plot(net, vertex.frame.color='black', edge.arrow.size=0,
layout=layout,
vertex.size = log10(V(net)$degree)*7,
vertex.label = NA,
vertex.label.color = V(net)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor(V(net)$color, alpha.f = 0.5))
title(sprintf(
'r/%s Full Two Mode Mod-Sub Network', subname)
, cex.main=1)
net
edges = read.csv('/Users/emg/Programming/GitHub/mod-timelines/moding-data/td/2017-06-05/lists/edgelist.csv')
nodes = read.csv('/Users/emg/Programming/GitHub/mod-timelines/moding-data/td/2017-06-05/lists/edgelist.csv')
net = graph_from_data_frame(d=edges, vertices=nodes)
net = simplify(net, remove.loops = T)
net
edges = read.csv('/Users/emg/Programming/GitHub/mod-timelines/moding-data/td/2017-06-01/lists/edgelist.csv')
nodes = read.csv('/Users/emg/Programming/GitHub/mod-timelines/moding-data/td/2017-06-01/lists/edgelist.csv')
net = graph_from_data_frame(d=edges, vertices=nodes)
net = simplify(net, remove.loops = T)
net
net = graph_from_data_frame(d=edges, vertices=nodes)
net
edges = read.csv('/Users/emg/Programming/GitHub/mod-timelines/moding-data/td/2017-06-06/lists/edgelist.csv')
nodes = read.csv('/Users/emg/Programming/GitHub/mod-timelines/moding-data/td/2017-06-06/lists/edgelist.csv')
net = graph_from_data_frame(d=edges, vertices=nodes)
nodes = read.csv('/Users/emg/Programming/GitHub/mod-timelines/moding-data/td/2017-06-06/lists/nodelist.csv')
net = graph_from_data_frame(d=edges, vertices=nodes)
net = simplify(net, remove.loops = T)
net
V(net)$type = nodes$type # allows bipartite bipartite
shapes = c('square','circle')
V(net)$shape = shapes[V(net)$type + 1]
cols = c('black','royalblue','midnightblue','indianred','darkred')
V(net)$color = cols[nodes$mod_type + 1]
net = delete_vertices(net, V(net)[V(net)$name==subname])
V(net)$degree = degree(net)
#net = delete_vertices(net, V(net)[V(net)$degree==1])
layout = layout_with_fr(net)
plot(net, vertex.frame.color='black', edge.arrow.size=0,
layout=layout,
vertex.size = log10(V(net)$degree)*7,
vertex.label = NA,
vertex.label.color = V(net)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor(V(net)$color, alpha.f = 0.5))
title(sprintf(
'r/%s Full Two Mode Mod-Sub Network', subname)
, cex.main=1)
net = delete_vertices(net, V(net)[V(net)$degree==1])
plot(net, vertex.frame.color=black, edge.arrow.size=0,
layout=layout_with_fr,
vertex.size = 2,
#vertex.size = log10(V(net)$degree)*7,
#vertex.label = NA,
vertex.label.color = V(net)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor(V(net)$color, alpha.f = 0.5))
title(sprintf(
'r/%s Two Mode Mod-Sub Network (D>1)', subname)
, cex.main=1)
net = delete_vertices(net, V(net)[V(net)$degree==1])
plot(net, vertex.frame.color='black', edge.arrow.size=0,
layout=layout_with_fr,
vertex.size = 2,
#vertex.size = log10(V(net)$degree)*7,
#vertex.label = NA,
vertex.label.color = V(net)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor(V(net)$color, alpha.f = 0.5))
title(sprintf(
'r/%s Two Mode Mod-Sub Network (D>1)', subname)
, cex.main=1)
plot(net, vertex.frame.color='black', edge.arrow.size=0,
layout=layout_with_fr,
vertex.size = 2,
#vertex.size = log10(V(net)$degree)*7,
#vertex.label = NA,
vertex.label.color = V(net)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor(V(net)$color, alpha.f = 0.5))
plot(net, vertex.frame.color='black', edge.arrow.size=0,
layout=layout,
vertex.size = log10(V(net)$degree)*7,
vertex.label = NA,
vertex.label.color = V(net)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor(V(net)$color, alpha.f = 0.5))
title(sprintf(
'r/%s Full Two Mode Mod-Sub Network', subname)
, cex.main=1)
net = delete_vertices(net, V(net)[V(net)$degree==1])
plot(net, vertex.frame.color='black', edge.arrow.size=0,
layout=layout_with_fr,
vertex.size = log10(V(net)$degree)*7,
vertex.label = NA,
vertex.label.color = V(net)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor(V(net)$color, alpha.f = 0.5))
title(sprintf(
'r/%s Two Mode Mod-Sub Network (D>1)', subname)
, cex.main=1)
plot(net, vertex.frame.color='black', edge.arrow.size=0,
layout=layout_with_fr,
vertex.size = log10(V(net)$degree)*7,
vertex.label = NA,
vertex.label.color = V(net)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor(V(net)$color, alpha.f = 0.5),
edge.color='black')
plot(net, vertex.frame.color='black', edge.arrow.size=0,
layout=layout_with_fr,
vertex.size = log10(V(net)$degree)*7,
vertex.label = NA,
vertex.label.color = V(net)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor(V(net)$color, alpha.f = 0.5),
edge.color=adjustcolor('black', alpha.f = 0.5))
title(sprintf(
'r/%s Two Mode Mod-Sub Network (D>1)', subname)
, cex.main=1)
plot(net, vertex.frame.color='black', edge.arrow.size=0,
layout=layout_with_kk,
vertex.size = log10(V(net)$degree)*7,
vertex.label = NA,
vertex.label.color = V(net)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor(V(net)$color, alpha.f = 0.5),
edge.color=adjustcolor('black', alpha.f = 0.5))
title(sprintf(
'r/%s Two Mode Mod-Sub Network (D>1)', subname)
, cex.main=1)
plot(net, vertex.frame.color='black', edge.arrow.size=0,
layout=layout_with_fr,
vertex.size = log10(V(net)$degree)*7,
vertex.label = NA,
vertex.label.color = V(net)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor(V(net)$color, alpha.f = 0.5),
edge.color=adjustcolor('black', alpha.f = 0.5))
title(sprintf(
'r/%s Two Mode Mod-Sub Network (D>1)', subname)
, cex.main=1)
plot(subs, vertex.frame.color='black', edge.arrow.size=0,
layout=layout_with_fr,
vertex.size = log10(V(subs)$degree)*7,
vertex.label = NA,
vertex.label.color = V(subs)$color,
vertex.label.cex = 0.4,
vertex.color = adjustcolor(V(subs)$color, alpha.f = 0.5),
edge.color=adjustcolor('black', alpha.f = 0.5))
title(sprintf(
'r/%s Two Mode Mod-Sub subswork (D>1)', subname)
, cex.main=1)
plot(subs, vertex.frame.color='black', edge.arrow.size=0,
layout=layout_with_fr,
vertex.size = log10(V(subs)$degree)*7,
vertex.label = NA,
vertex.label.color = V(subs)$color,
vertex.label.cex = 0.4)
pr=bipartite.projection(net)
subs=pr$proj1
V(subs)$subdegree = degree(subs)
subs = delete_vertices(subs, V(subs)[V(subs)$degree==1])
pr=bipartite.projection(net)
subs=pr$proj1
V(subs)$subdegree = degree(subs)
subs = delete_vertices(subs, V(subs)[V(subs)$degree==1])
plot(subs, vertex.frame.color='black', edge.arrow.size=0,
layout=layout_with_fr,
vertex.size = log10(V(subs)$degree)*7,
vertex.label = NA,
vertex.label.color = V(subs)$color,
vertex.label.cex = 0.4)
plot(subs, vertex.frame.color='black', edge.arrow.size=0,
layout=layout_with_fr,
vertex.size = log10(V(subs)$degree)*7,
vertex.label = NA,
vertex.label.color = V(subs)$color,
vertex.color = adjustcolor(V(subs)$color, alpha.f = 0.5),
edge.color=adjustcolor('black', alpha.f = 0.5))
plot(subs, vertex.frame.color='black', edge.arrow.size=0,
layout=layout_with_fr,
vertex.size = log10(V(subs)$degree)*7,
#vertex.label = NA,
vertex.label.color = V(subs)$color,
vertex.color = adjustcolor(V(subs)$color, alpha.f = 0.5),
edge.color=adjustcolor('black', alpha.f = 0.1))
title(sprintf(
'r/%s One Mode Sub Network (D>1)', subname)
, cex.main=1)
